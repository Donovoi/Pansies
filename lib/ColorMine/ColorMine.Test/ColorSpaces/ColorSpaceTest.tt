<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import Namespace="System.Xml" #>
<#@ import Namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#
	var document1 = new XmlDocument();
	var file1 = Host.ResolvePath("../TestData/ConversionResults.xml");
	document1.Load(file1);
	var colors = document1.SelectNodes("ConversionResults/*");

	var document2 = new XmlDocument();
	var file2 = Host.ResolvePath("../../ColorMine/ColorSpaces/ColorSpaces.xml");
	document2.Load(file2);
	var colorSpaces = document2.SelectSingleNode("colorSpaces");

#>
<#@ output extension=".cs" #>//Note: This is a generated file.
using ColorMine.ColorSpaces;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;

namespace ColorMine.Test.ColorSpaces
{
	public abstract class ColorSpaceTest
    {
<#
	var fromSpace = colors[0];
	var fromName = fromSpace.Name;
	var test = fromSpace.ChildNodes[0];
	var colorName = test.Attributes["Name"].Value;

	foreach (XmlNode toSpace in test.ChildNodes) {
		var toName = toSpace.Name;
#>
		protected static void ExpectedValuesForKnownColor(IColorSpace knownColor, I<#= toName #> expectedColor)
		{
			var target = knownColor.To<<#= toName #>>();
<# 
		var dataPoint = colorSpaces.SelectSingleNode("colorSpace[@name='" + toName + "']/dataPoints");

		foreach (XmlNode attribute in toSpace.Attributes) { 
		   if(attribute.Name != "Name") {
			   var max = int.Parse(dataPoint.SelectSingleNode("dataPoint[@label='"+ attribute.Name + "']/@max").Value);
			   double delta = max * 0.005;

#>
			Assert.AreEqual(expectedColor.<#= attribute.Name #>, target.<#= attribute.Name #>, <#= delta #>, "(<#= attribute.Name #>)" + expectedColor.<#= attribute.Name #> + " != " + target.<#= attribute.Name #>);
<# } } #>
		}
<# } #>
	}
}